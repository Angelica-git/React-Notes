{"ast":null,"code":"export function getNotes() {\n  const notes = localStorage.getItem('notes');\n  console.log('notes', notes);\n}\nexport function createNote(title, priority) {\n  const note = {\n    title,\n    priority\n  };\n  const noteArray = [note];\n  console.log(noteArray);\n  localStorage.setItem('notes', noteArray);\n}\n/* VIDEON LOCALSTORAGE\r\n\r\n\r\n\r\nexport function createNote(title, body) {\r\n  const note = {\r\n    id: Date.now(),\r\n    title,\r\n    body,\r\n  }\r\n  notes.push(note)\r\n  return note\r\n}\r\n\r\nexport function getNote(id) {\r\n  return notes.find((note) => note.id === id)\r\n}\r\n\r\nexport function getNotes() {\r\n  return notes\r\n}\r\n\r\n*/\n\nexport function updateNote(id, title, body) {\n  const indexToUpdate = notes.findIndex(note => note.id === id);\n  const note = {\n    id,\n    title,\n    body\n  }; // removes old note\n\n  notes.splice(indexToUpdate, 1); // adds new note to start\n\n  notes.splice(0, 0, note);\n  return notes;\n}\nexport function deleteNote(id) {\n  const indexToDelete = notes.findIndex(note => note.id === id);\n  if (indexToDelete >= 0) notes.splice(indexToDelete, 1);\n  return true;\n}","map":{"version":3,"sources":["C:/Users/Angelica/Desktop/react/notes/src/utils/noteHelpers.js"],"names":["getNotes","notes","localStorage","getItem","console","log","createNote","title","priority","note","noteArray","setItem","updateNote","id","body","indexToUpdate","findIndex","splice","deleteNote","indexToDelete"],"mappings":"AAAA,OAAO,SAASA,QAAT,GAAoB;AACzB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACD;AAED,OAAO,SAASK,UAAT,CAAoBC,KAApB,EAA2BC,QAA3B,EAAqC;AAC1C,QAAMC,IAAI,GAAG;AAACF,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAb;AACA,QAAME,SAAS,GAAG,CAACD,IAAD,CAAlB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;AACAR,EAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,SAA9B;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,UAAT,CAAoBC,EAApB,EAAwBN,KAAxB,EAA+BO,IAA/B,EAAqC;AAC1C,QAAMC,aAAa,GAAGd,KAAK,CAACe,SAAN,CAAiBP,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAAtC,CAAtB;AACA,QAAMJ,IAAI,GAAG;AACXI,IAAAA,EADW;AAEXN,IAAAA,KAFW;AAGXO,IAAAA;AAHW,GAAb,CAF0C,CAO1C;;AACAb,EAAAA,KAAK,CAACgB,MAAN,CAAaF,aAAb,EAA4B,CAA5B,EAR0C,CAS1C;;AACAd,EAAAA,KAAK,CAACgB,MAAN,CAAa,CAAb,EAAgB,CAAhB,EAAmBR,IAAnB;AACA,SAAOR,KAAP;AACD;AAED,OAAO,SAASiB,UAAT,CAAoBL,EAApB,EAAwB;AAC7B,QAAMM,aAAa,GAAGlB,KAAK,CAACe,SAAN,CAAiBP,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAAtC,CAAtB;AACA,MAAIM,aAAa,IAAI,CAArB,EAAwBlB,KAAK,CAACgB,MAAN,CAAaE,aAAb,EAA4B,CAA5B;AACxB,SAAO,IAAP;AACD","sourcesContent":["export function getNotes() {\r\n  const notes = localStorage.getItem('notes')\r\n  console.log('notes', notes)\r\n}\r\n\r\nexport function createNote(title, priority) {\r\n  const note = {title, priority}\r\n  const noteArray = [note]\r\n  console.log(noteArray)\r\n  localStorage.setItem('notes', noteArray)\r\n}\r\n\r\n/* VIDEON LOCALSTORAGE\r\n\r\n\r\n\r\nexport function createNote(title, body) {\r\n  const note = {\r\n    id: Date.now(),\r\n    title,\r\n    body,\r\n  }\r\n  notes.push(note)\r\n  return note\r\n}\r\n\r\nexport function getNote(id) {\r\n  return notes.find((note) => note.id === id)\r\n}\r\n\r\nexport function getNotes() {\r\n  return notes\r\n}\r\n\r\n*/\r\n\r\nexport function updateNote(id, title, body) {\r\n  const indexToUpdate = notes.findIndex((note) => note.id === id)\r\n  const note = {\r\n    id,\r\n    title,\r\n    body,\r\n  }\r\n  // removes old note\r\n  notes.splice(indexToUpdate, 1)\r\n  // adds new note to start\r\n  notes.splice(0, 0, note)\r\n  return notes\r\n}\r\n\r\nexport function deleteNote(id) {\r\n  const indexToDelete = notes.findIndex((note) => note.id === id)\r\n  if (indexToDelete >= 0) notes.splice(indexToDelete, 1)\r\n  return true\r\n}\r\n"]},"metadata":{},"sourceType":"module"}