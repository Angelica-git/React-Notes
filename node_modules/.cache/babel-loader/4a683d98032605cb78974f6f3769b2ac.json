{"ast":null,"code":"function initializeNotes(){// sets localstorage for the first time\nlocalStorage.setItem('notes',JSON.stringify([]));// returns an array\nreturn[];}var archive=[];export function getNotes(){var notes=localStorage.getItem('notes');if(!notes){return initializeNotes();}var parsedNotes=JSON.parse(notes);return parsedNotes;}export function createNote(title,body){var notes=getNotes();var newNote={id:Date.now(),title:title,body:body};notes.push(newNote);console.log('about to save',notes);var jsonNoteArray=JSON.stringify(notes);localStorage.setItem('notes',jsonNoteArray);}export function getNote(id){var notes=getNotes();return notes.find(function(note){return note.id===id;});}export function updateNote(id,title,body){var notes=getNotes();var indexToUpdate=notes.findIndex(function(note){return note.id===id;});var note={id:id,title:title,body:body};// removes old note\nnotes.splice(indexToUpdate,1);// adds new note to start\nnotes.splice(0,0,note);var jsonNoteArray=JSON.stringify(notes);localStorage.setItem('notes',jsonNoteArray);}export function deleteNote(id){var notes=getNotes();var indexToDelete=notes.findIndex(function(note){return note.id===id;});if(indexToDelete>=0)notes.splice(indexToDelete,1);var jsonNoteArray=JSON.stringify(notes);localStorage.setItem('notes',jsonNoteArray);}export function deleteFromArchive(id){var notes=getNotes();var indexToDelete=archive.findIndex(function(note){return note.id===id;});if(indexToDelete>=0)archive.splice(indexToDelete,1);var jsonNoteArray=JSON.stringify(notes);localStorage.setItem('notes',jsonNoteArray);}export function archiveNote(note){// add to the archive\narchive.push(note);// remove the note from notes\ndeleteNote(note.id);}export function unArchiveNote(note){var notes=getNotes();// add to the notes\nnotes.push(note);// remove the note from archive\ndeleteFromArchive(note.id);var jsonNoteArray=JSON.stringify(notes);localStorage.setItem('notes',jsonNoteArray);}export function getArchive(){return archive;}","map":{"version":3,"sources":["C:/Users/Angelica/Desktop/notes/React-Notes/src/utils/noteHelpers.js"],"names":["initializeNotes","localStorage","setItem","JSON","stringify","archive","getNotes","notes","getItem","parsedNotes","parse","createNote","title","body","newNote","id","Date","now","push","console","log","jsonNoteArray","getNote","find","note","updateNote","indexToUpdate","findIndex","splice","deleteNote","indexToDelete","deleteFromArchive","archiveNote","unArchiveNote","getArchive"],"mappings":"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","sourcesContent":["function initializeNotes() {\r\n  // sets localstorage for the first time\r\n  localStorage.setItem('notes', JSON.stringify([]))\r\n  // returns an array\r\n  return []\r\n}\r\n\r\nconst archive = []\r\n\r\nexport function getNotes() {\r\n  let notes = localStorage.getItem('notes')\r\n  if (!notes) {\r\n    return initializeNotes()\r\n  }\r\n  const parsedNotes = JSON.parse(notes)\r\n  return parsedNotes\r\n}\r\n\r\nexport function createNote(title, body) {\r\n  const notes = getNotes()\r\n  const newNote = {id: Date.now(), title, body}\r\n  notes.push(newNote)\r\n  console.log('about to save', notes)\r\n  const jsonNoteArray = JSON.stringify(notes)\r\n  localStorage.setItem('notes', jsonNoteArray)\r\n}\r\n\r\nexport function getNote(id) {\r\n  const notes = getNotes()\r\n  return notes.find((note) => note.id === id)\r\n}\r\n\r\nexport function updateNote(id, title, body) {\r\n  const notes = getNotes()\r\n  const indexToUpdate = notes.findIndex((note) => note.id === id)\r\n  const note = {\r\n    id,\r\n    title,\r\n    body,\r\n  }\r\n  // removes old note\r\n  notes.splice(indexToUpdate, 1)\r\n  // adds new note to start\r\n  notes.splice(0, 0, note)\r\n  const jsonNoteArray = JSON.stringify(notes)\r\n  localStorage.setItem('notes', jsonNoteArray)\r\n}\r\n\r\nexport function deleteNote(id) {\r\n  const notes = getNotes()\r\n  const indexToDelete = notes.findIndex((note) => note.id === id)\r\n  if (indexToDelete >= 0) notes.splice(indexToDelete, 1)\r\n  const jsonNoteArray = JSON.stringify(notes)\r\n  localStorage.setItem('notes', jsonNoteArray)\r\n}\r\n\r\nexport function deleteFromArchive(id) {\r\n  const notes = getNotes()\r\n  const indexToDelete = archive.findIndex((note) => note.id === id)\r\n  if (indexToDelete >= 0) archive.splice(indexToDelete, 1)\r\n  const jsonNoteArray = JSON.stringify(notes)\r\n  localStorage.setItem('notes', jsonNoteArray)\r\n}\r\n\r\nexport function archiveNote(note) {\r\n  // add to the archive\r\n  archive.push(note)\r\n  // remove the note from notes\r\n  deleteNote(note.id)\r\n}\r\n\r\nexport function unArchiveNote(note) {\r\n  const notes = getNotes()\r\n  // add to the notes\r\n  notes.push(note)\r\n  // remove the note from archive\r\n  deleteFromArchive(note.id)\r\n  const jsonNoteArray = JSON.stringify(notes)\r\n  localStorage.setItem('notes', jsonNoteArray)\r\n}\r\n\r\nexport function getArchive() {\r\n  return archive\r\n}\r\n"]},"metadata":{},"sourceType":"module"}