{"ast":null,"code":"import _slicedToArray from\"C:/Users/Angelica/Desktop/notes/React-Notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from'react';import en from'./i18n/en.json';import sv from'./i18n/sv.json';export var LanguageContext=/*#__PURE__*/React.createContext(null);var getLanguageFromString={sv:sv,en:en};export default function Provider(_ref){var children=_ref.children,initLangCode=_ref.initLangCode;var _useState=useState(initLangCode),_useState2=_slicedToArray(_useState,2),langCode=_useState2[0],setLangCode=_useState2[1];var lang=getLanguageFromString[langCode];return/*#__PURE__*/_jsx(LanguageContext.Provider,{value:{lang:lang,setLangCode:setLangCode},children:children});}","map":{"version":3,"sources":["C:/Users/Angelica/Desktop/notes/React-Notes/src/context/LanguageContext.js"],"names":["React","useState","en","sv","LanguageContext","createContext","getLanguageFromString","Provider","children","initLangCode","langCode","setLangCode","lang"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,EAAP,KAAe,gBAAf,CACA,MAAOC,CAAAA,EAAP,KAAe,gBAAf,CAEA,MAAO,IAAMC,CAAAA,eAAe,cAAGJ,KAAK,CAACK,aAAN,CAAoB,IAApB,CAAxB,CAEP,GAAMC,CAAAA,qBAAqB,CAAG,CAC5BH,EAAE,CAAFA,EAD4B,CAE5BD,EAAE,CAAFA,EAF4B,CAA9B,CAKA,cAAe,SAASK,CAAAA,QAAT,MAA4C,IAAzBC,CAAAA,QAAyB,MAAzBA,QAAyB,CAAfC,YAAe,MAAfA,YAAe,eACzBR,QAAQ,CAACQ,YAAD,CADiB,wCAClDC,QADkD,eACxCC,WADwC,eAGzD,GAAMC,CAAAA,IAAI,CAAGN,qBAAqB,CAACI,QAAD,CAAlC,CAEA,mBAAO,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAE,CAACE,IAAI,CAAJA,IAAD,CAAOD,WAAW,CAAXA,WAAP,CAAjC,UAAuDH,QAAvD,EAAP,CACD","sourcesContent":["import React, {useState} from 'react'\r\nimport en from './i18n/en.json'\r\nimport sv from './i18n/sv.json'\r\n\r\nexport const LanguageContext = React.createContext(null)\r\n\r\nconst getLanguageFromString = {\r\n  sv,\r\n  en,\r\n}\r\n\r\nexport default function Provider({children, initLangCode}) {\r\n  const [langCode, setLangCode] = useState(initLangCode)\r\n\r\n  const lang = getLanguageFromString[langCode]\r\n\r\n  return <LanguageContext.Provider value={{lang, setLangCode}}>{children}</LanguageContext.Provider>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}