{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Angelica\\\\Desktop\\\\notes\\\\React-Notes\\\\src\\\\context\\\\NoteContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getNotes } from '../utils/noteHelpers';\nexport const NoteContext = /*#__PURE__*/React.createContext(null);\nexport default function Provider({\n  children\n}) {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    const notesData = getNotes();\n    setNotes(notesData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      setNotes\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Provider, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["C:/Users/Angelica/Desktop/notes/React-Notes/src/context/NoteContext.js"],"names":["React","useState","useEffect","getNotes","NoteContext","createContext","Provider","children","notes","setNotes","notesData"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAAoB,IAApB,CAApB;AAEP,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,SAAS,GAAGP,QAAQ,EAA1B;AACAM,IAAAA,QAAQ,CAACC,SAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACF,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAA7B;AAAA,cAAiDF;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GATuBD,Q;;KAAAA,Q","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {getNotes} from '../utils/noteHelpers'\r\n\r\nexport const NoteContext = React.createContext(null)\r\n\r\nexport default function Provider({children}) {\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    const notesData = getNotes()\r\n    setNotes(notesData)\r\n  }, [])\r\n\r\n  return <NoteContext.Provider value={{notes, setNotes}}>{children}</NoteContext.Provider>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}