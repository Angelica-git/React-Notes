{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Angelica\\\\Desktop\\\\react\\\\notes\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactuseState, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport List from './components/List';\nimport Editor from './components/Editor';\nimport * as N from './utils/noteHelpers';\nimport Form from './examples/Form';\nimport Clock from './examples/Clock';\nimport { getNotes } from './utils/noteHelpers';\n/* <ul>\n    {getNote.map((note) => (\n    <li>{note}</li>\n    ))}\n    </ul>\n*/\n//const list = notes.map((note) => <li>{note}</li>)\n\nfunction App() {\n  _s();\n\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    const notes = getNotes();\n    setNotes(notes);\n  }, []);\n\n  const refreshList = () => {\n    setSelectedNote(undefined);\n    const notes = getNotes();\n    setNotes([...notes]);\n  };\n\n  const onClickNewNote = () => setSelectedNote(undefined);\n\n  return /*#__PURE__*/_jsxDEV(Notes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"2JCEIMEn69JxQRSQ58KgiO4ZdM8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Angelica/Desktop/react/notes/src/App.js"],"names":["Jumbotron","ReactuseState","useState","useEffect","Container","Row","Col","Button","List","Editor","N","Form","Clock","getNotes","App","selectedNote","setSelectedNote","undefined","notes","setNotes","refreshList","onClickNewNote"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,2BAAtB;AACA,OAAO,sCAAP;AACA,OAAOC,aAAP,IAAuBC,QAAvB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAACe,SAAD,CAAhD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,KAAK,GAAGL,QAAQ,EAAtB;AACAM,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAME,WAAW,GAAG,MAAM;AACxBJ,IAAAA,eAAe,CAACC,SAAD,CAAf;AACA,UAAMC,KAAK,GAAGL,QAAQ,EAAtB;AACAM,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACD,GAJD;;AAMA,QAAMG,cAAc,GAAG,MAAML,eAAe,CAACC,SAAD,CAA5C;;AAEA,sBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlBQH,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import Jumbotron from 'react-bootstrap/Jumbotron'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport ReactuseState, {useState, useEffect} from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport List from './components/List'\nimport Editor from './components/Editor'\nimport * as N from './utils/noteHelpers'\nimport Form from './examples/Form'\nimport Clock from './examples/Clock'\nimport {getNotes} from './utils/noteHelpers'\n\n/* <ul>\n    {getNote.map((note) => (\n    <li>{note}</li>\n    ))}\n    </ul>\n*/\n//const list = notes.map((note) => <li>{note}</li>)\n\nfunction App() {\n  const [selectedNote, setSelectedNote] = useState(undefined)\n  const [notes, setNotes] = useState([])\n\n  useEffect(() => {\n    const notes = getNotes()\n    setNotes(notes)\n  }, [])\n\n  const refreshList = () => {\n    setSelectedNote(undefined)\n    const notes = getNotes()\n    setNotes([...notes])\n  }\n\n  const onClickNewNote = () => setSelectedNote(undefined)\n\n  return <Notes />\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}