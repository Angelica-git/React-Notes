{"ast":null,"code":"function initializeNotes() {\n  // sets localstorage for the first time\n  localStorage.setItem('notes', JSON.stringify([])); // returns an array\n\n  return [];\n}\n\nconst notes = [{\n  id: 1,\n  title: 'note1',\n  body: 'hello'\n}, {\n  id: 2,\n  title: 'note2',\n  body: 'hello2'\n}, {\n  id: 3,\n  title: 'note3',\n  body: 'hello3'\n}];\nexport function createNote(title, body) {\n  const note = {\n    id: Date.now(),\n    title,\n    body\n  };\n  notes.push(note);\n  return note;\n}\nexport function getNote(id) {\n  return notes.find(note => note.id === id);\n}\nexport function getNotes() {\n  return notes;\n}\n/*  VIDEON LOCALSTORAGE 29 min in i videon\r\nexport function getNotes() {\r\n  const notes = localStorage.getItem('notes')\r\n  console.log('notes', notes)\r\n}\r\n\r\nexport function createNote(title, priority) {\r\n  const note = {title, priority}\r\n  const noteArray = [note]\r\n  console.log(noteArray)\r\n  localStorage.setItem('notes', noteArray)\r\n}\r\n\r\n*/\n\nexport function updateNote(id, title, body) {\n  const indexToUpdate = notes.findIndex(note => note.id === id);\n  const note = {\n    id,\n    title,\n    body\n  }; // removes old note\n\n  notes.splice(indexToUpdate, 1); // adds new note to start\n\n  notes.splice(0, 0, note);\n  return notes;\n}\nexport function deleteNote(id) {\n  const indexToDelete = notes.findIndex(note => note.id === id);\n  if (indexToDelete >= 0) notes.splice(indexToDelete, 1);\n  return true;\n}","map":{"version":3,"sources":["C:/Users/Angelica/Desktop/react/notes/src/utils/noteHelpers.js"],"names":["initializeNotes","localStorage","setItem","JSON","stringify","notes","id","title","body","createNote","note","Date","now","push","getNote","find","getNotes","updateNote","indexToUpdate","findIndex","splice","deleteNote","indexToDelete"],"mappings":"AAAA,SAASA,eAAT,GAA2B;AACzB;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B,EAFyB,CAGzB;;AACA,SAAO,EAAP;AACD;;AAED,MAAMC,KAAK,GAAG,CACZ;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,OAAf;AAAwBC,EAAAA,IAAI,EAAE;AAA9B,CADY,EAEZ;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,OAAf;AAAwBC,EAAAA,IAAI,EAAE;AAA9B,CAFY,EAGZ;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,KAAK,EAAE,OAAf;AAAwBC,EAAAA,IAAI,EAAE;AAA9B,CAHY,CAAd;AAMA,OAAO,SAASC,UAAT,CAAoBF,KAApB,EAA2BC,IAA3B,EAAiC;AACtC,QAAME,IAAI,GAAG;AACXJ,IAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,EADO;AAEXL,IAAAA,KAFW;AAGXC,IAAAA;AAHW,GAAb;AAKAH,EAAAA,KAAK,CAACQ,IAAN,CAAWH,IAAX;AACA,SAAOA,IAAP;AACD;AAED,OAAO,SAASI,OAAT,CAAiBR,EAAjB,EAAqB;AAC1B,SAAOD,KAAK,CAACU,IAAN,CAAYL,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAjC,CAAP;AACD;AAED,OAAO,SAASU,QAAT,GAAoB;AACzB,SAAOX,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASY,UAAT,CAAoBX,EAApB,EAAwBC,KAAxB,EAA+BC,IAA/B,EAAqC;AAC1C,QAAMU,aAAa,GAAGb,KAAK,CAACc,SAAN,CAAiBT,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAtC,CAAtB;AACA,QAAMI,IAAI,GAAG;AACXJ,IAAAA,EADW;AAEXC,IAAAA,KAFW;AAGXC,IAAAA;AAHW,GAAb,CAF0C,CAO1C;;AACAH,EAAAA,KAAK,CAACe,MAAN,CAAaF,aAAb,EAA4B,CAA5B,EAR0C,CAS1C;;AACAb,EAAAA,KAAK,CAACe,MAAN,CAAa,CAAb,EAAgB,CAAhB,EAAmBV,IAAnB;AACA,SAAOL,KAAP;AACD;AAED,OAAO,SAASgB,UAAT,CAAoBf,EAApB,EAAwB;AAC7B,QAAMgB,aAAa,GAAGjB,KAAK,CAACc,SAAN,CAAiBT,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAtC,CAAtB;AACA,MAAIgB,aAAa,IAAI,CAArB,EAAwBjB,KAAK,CAACe,MAAN,CAAaE,aAAb,EAA4B,CAA5B;AACxB,SAAO,IAAP;AACD","sourcesContent":["function initializeNotes() {\r\n  // sets localstorage for the first time\r\n  localStorage.setItem('notes', JSON.stringify([]))\r\n  // returns an array\r\n  return []\r\n}\r\n\r\nconst notes = [\r\n  {id: 1, title: 'note1', body: 'hello'},\r\n  {id: 2, title: 'note2', body: 'hello2'},\r\n  {id: 3, title: 'note3', body: 'hello3'},\r\n]\r\n\r\nexport function createNote(title, body) {\r\n  const note = {\r\n    id: Date.now(),\r\n    title,\r\n    body,\r\n  }\r\n  notes.push(note)\r\n  return note\r\n}\r\n\r\nexport function getNote(id) {\r\n  return notes.find((note) => note.id === id)\r\n}\r\n\r\nexport function getNotes() {\r\n  return notes\r\n}\r\n\r\n/*  VIDEON LOCALSTORAGE 29 min in i videon\r\nexport function getNotes() {\r\n  const notes = localStorage.getItem('notes')\r\n  console.log('notes', notes)\r\n}\r\n\r\nexport function createNote(title, priority) {\r\n  const note = {title, priority}\r\n  const noteArray = [note]\r\n  console.log(noteArray)\r\n  localStorage.setItem('notes', noteArray)\r\n}\r\n\r\n*/\r\n\r\nexport function updateNote(id, title, body) {\r\n  const indexToUpdate = notes.findIndex((note) => note.id === id)\r\n  const note = {\r\n    id,\r\n    title,\r\n    body,\r\n  }\r\n  // removes old note\r\n  notes.splice(indexToUpdate, 1)\r\n  // adds new note to start\r\n  notes.splice(0, 0, note)\r\n  return notes\r\n}\r\n\r\nexport function deleteNote(id) {\r\n  const indexToDelete = notes.findIndex((note) => note.id === id)\r\n  if (indexToDelete >= 0) notes.splice(indexToDelete, 1)\r\n  return true\r\n}\r\n"]},"metadata":{},"sourceType":"module"}