{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext}from'react';import ListGroup from'react-bootstrap/ListGroup';import{LanguageContext}from'../context/LanguageContext';export default function List(_ref){var selectedNote=_ref.selectedNote,setSelectedNote=_ref.setSelectedNote,notes=_ref.notes;var onSelectNote=function onSelectNote(note){setSelectedNote(note);};var _useContext=useContext(LanguageContext),lang=_useContext.lang;if(!notes.length)return lang['noNotesFound'];return/*#__PURE__*/_jsx(ListGroup,{as:\"ul\",children:notes.map(function(note,index){return/*#__PURE__*/_jsx(ListGroup.Item,{active:selectedNote?note.id===selectedNote.id:false,onClick:function onClick(){return onSelectNote(note);},as:\"li\",children:note.title});})});}","map":{"version":3,"sources":["C:/Users/Angelica/Desktop/notes/React-Notes/src/components/List.js"],"names":["React","useContext","ListGroup","LanguageContext","List","selectedNote","setSelectedNote","notes","onSelectNote","note","lang","length","map","index","id","title"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,OAAQC,eAAR,KAA8B,4BAA9B,CAEA,cAAe,SAASC,CAAAA,IAAT,MAAsD,IAAvCC,CAAAA,YAAuC,MAAvCA,YAAuC,CAAzBC,eAAyB,MAAzBA,eAAyB,CAARC,KAAQ,MAARA,KAAQ,CACnE,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAU,CAC7BH,eAAe,CAACG,IAAD,CAAf,CACD,CAFD,CADmE,gBAKpDR,UAAU,CAACE,eAAD,CAL0C,CAK5DO,IAL4D,aAK5DA,IAL4D,CAOnE,GAAI,CAACH,KAAK,CAACI,MAAX,CAAmB,MAAOD,CAAAA,IAAI,CAAC,cAAD,CAAX,CAEnB,mBACE,KAAC,SAAD,EAAW,EAAE,CAAC,IAAd,UACGH,KAAK,CAACK,GAAN,CAAU,SAACH,IAAD,CAAOI,KAAP,qBACT,KAAC,SAAD,CAAW,IAAX,EACE,MAAM,CAAER,YAAY,CAAGI,IAAI,CAACK,EAAL,GAAYT,YAAY,CAACS,EAA5B,CAAiC,KADvD,CAEE,OAAO,CAAE,yBAAMN,CAAAA,YAAY,CAACC,IAAD,CAAlB,EAFX,CAGE,EAAE,CAAC,IAHL,UAKGA,IAAI,CAACM,KALR,EADS,EAAV,CADH,EADF,CAaD","sourcesContent":["import React, {useContext} from 'react'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport {LanguageContext} from '../context/LanguageContext'\r\n\r\nexport default function List({selectedNote, setSelectedNote, notes}) {\r\n  const onSelectNote = (note) => {\r\n    setSelectedNote(note)\r\n  }\r\n\r\n  const {lang} = useContext(LanguageContext)\r\n\r\n  if (!notes.length) return lang['noNotesFound']\r\n\r\n  return (\r\n    <ListGroup as=\"ul\">\r\n      {notes.map((note, index) => (\r\n        <ListGroup.Item\r\n          active={selectedNote ? note.id === selectedNote.id : false}\r\n          onClick={() => onSelectNote(note)}\r\n          as=\"li\"\r\n        >\r\n          {note.title}\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}