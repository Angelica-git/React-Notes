{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Angelica\\\\Desktop\\\\react\\\\notes\\\\src\\\\examples\\\\Clock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport default function Clock() {\n  _s();\n\n  //constructor(props) {\n  //super(props)\n  //this.state = {date: new Date()}\n  const [date, setDate] = useState(new Date()); //tick = () => this.setState({date: new Date()})\n\n  const tick = () => setDate(new Date());\n\n  useEffect(() => {\n    const timerID = setInterval(() => {\n      tick();\n    }, 1000);\n    return clearInterval(timerID);\n  }, []);\n  /*\r\n  Istället för componentDidMount i functioncomponents\r\n  \r\n  useEffect(() => {\r\n    //do something\r\n  }, [someVarible, anotherVarible, prop]) När någon av dessa ändras händer det ovan.\r\n  Lämnar man denna [] tom, it will only run once unmount\r\n  */\n  //componentDidMount() {\n  // this.timerID = setInterval(() => {\n  // this.tick()\n  //  }, 1000)\n  //}\n  //componentWillUnmount() {\n  //clearInterval(this.timerID)\n  //\n  //render() {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Hey, it's \", this.state.date.toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Clock, \"Gqi45WOZhU2c0BLYX0HoJeiR0fk=\");\n\n_c = Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["C:/Users/Angelica/Desktop/react/notes/src/examples/Clock.js"],"names":["React","useState","Clock","date","setDate","Date","tick","useEffect","timerID","setInterval","clearInterval","state","toLocaleTimeString"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B;AACA;AACA;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAII,IAAJ,EAAD,CAAhC,CAL8B,CAO9B;;AAEA,QAAMC,IAAI,GAAG,MAAMF,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAA1B;;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,OAAO,GAAGC,WAAW,CAAC,MAAM;AAChCH,MAAAA,IAAI;AACL,KAF0B,EAExB,IAFwB,CAA3B;AAGA,WAAOI,aAAa,CAACF,OAAD,CAApB;AACD,GALQ,EAKN,EALM,CAAT;AAOA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA,sBACE;AAAA,2BACE;AAAA,gCAAgB,KAAKG,KAAL,CAAWR,IAAX,CAAgBS,kBAAhB,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3CuBV,K;;KAAAA,K","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function Clock() {\r\n  //constructor(props) {\r\n  //super(props)\r\n  //this.state = {date: new Date()}\r\n\r\n  const [date, setDate] = useState(new Date())\r\n\r\n  //tick = () => this.setState({date: new Date()})\r\n\r\n  const tick = () => setDate(new Date())\r\n\r\n  useEffect(() => {\r\n    const timerID = setInterval(() => {\r\n      tick()\r\n    }, 1000)\r\n    return clearInterval(timerID)\r\n  }, [])\r\n\r\n  /*\r\n  Istället för componentDidMount i functioncomponents\r\n  \r\n  useEffect(() => {\r\n    //do something\r\n  }, [someVarible, anotherVarible, prop]) När någon av dessa ändras händer det ovan.\r\nLämnar man denna [] tom, it will only run once unmount\r\n  */\r\n\r\n  //componentDidMount() {\r\n  // this.timerID = setInterval(() => {\r\n  // this.tick()\r\n  //  }, 1000)\r\n  //}\r\n\r\n  //componentWillUnmount() {\r\n  //clearInterval(this.timerID)\r\n  //\r\n\r\n  //render() {\r\n  return (\r\n    <div>\r\n      <h2> Hey, it's {this.state.date.toLocaleTimeString()}</h2>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}