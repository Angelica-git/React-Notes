{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Angelica\\\\Desktop\\\\react\\\\notes\\\\src\\\\components\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { getNotes, getArchive } from '../utils/noteHelpers';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport List from './List';\nimport Form from './Form';\nimport { NoteContext } from '../context/NoteContext';\nimport LanguageButtons from '../context/LanguageButtons';\nexport default function Notes() {\n  _s();\n\n  const [selectedNote, setSelectedNote] = useState(undefined);\n  const [showArchive, setShowArchive] = useState(false);\n  const {\n    notes,\n    setNotes\n  } = useContext(NoteContext);\n  const [archivedNotes, setArchivedNotes] = useState([]);\n\n  const refreshList = () => {\n    setSelectedNote(undefined);\n    const notes = getNotes();\n    const archivedNotes = getArchive();\n    setNotes([...notes]);\n    setArchivedNotes([...archivedNotes]);\n  };\n\n  const onClickNewNote = () => setSelectedNote(undefined);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes by Angelica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"H\\xE4r \\xE4r min note app!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 4,\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClickNewNote,\n            variant: \"dark\",\n            size: \"md\",\n            block: true,\n            className: \"mb-4\",\n            children: \"New note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(List, {\n          notes: showArchive ? archivedNotes : notes,\n          selectedNote: selectedNote,\n          setSelectedNote: setSelectedNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowArchive(!showArchive),\n          variant: showArchive ? 'primary' : 'secondary',\n          size: \"md\",\n          block: true,\n          className: \"mt-4\",\n          children: [showArchive ? /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-sticky-note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 65\n          }, this), \" \\xA0\", showArchive ? 'Notes' : 'Archive']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LanguageButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          isArchived: showArchive,\n          refreshList: refreshList,\n          selectedNote: selectedNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notes, \"66QfuLD7iaFVwyjZ10lNhoZjWik=\");\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Angelica/Desktop/react/notes/src/components/Notes.js"],"names":["React","useState","useContext","getNotes","getArchive","Jumbotron","Container","Row","Col","Button","List","Form","NoteContext","LanguageButtons","Notes","selectedNote","setSelectedNote","undefined","showArchive","setShowArchive","notes","setNotes","archivedNotes","setArchivedNotes","refreshList","onClickNewNote"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\r\nimport {getNotes, getArchive} from '../utils/noteHelpers'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport List from './List'\r\nimport Form from './Form'\r\nimport {NoteContext} from '../context/NoteContext'\r\nimport LanguageButtons from '../context/LanguageButtons'\r\n\r\nexport default function Notes() {\r\n  const [selectedNote, setSelectedNote] = useState(undefined)\r\n  const [showArchive, setShowArchive] = useState(false)\r\n  const {notes, setNotes} = useContext(NoteContext)\r\n  const [archivedNotes, setArchivedNotes] = useState([])\r\n\r\n  const refreshList = () => {\r\n    setSelectedNote(undefined)\r\n    const notes = getNotes()\r\n    const archivedNotes = getArchive()\r\n    setNotes([...notes])\r\n    setArchivedNotes([...archivedNotes])\r\n  }\r\n\r\n  const onClickNewNote = () => setSelectedNote(undefined)\r\n\r\n  return (\r\n    <Container>\r\n      <Jumbotron fluid>\r\n        <Container>\r\n          <h1>Notes by Angelica</h1>\r\n          <p>Här är min note app!</p>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Row>\r\n        <Col sm={4}>\r\n          <>\r\n            <Button onClick={onClickNewNote} variant=\"dark\" size=\"md\" block className=\"mb-4\">\r\n              New note\r\n            </Button>\r\n          </>\r\n          <List\r\n            notes={showArchive ? archivedNotes : notes}\r\n            selectedNote={selectedNote}\r\n            setSelectedNote={setSelectedNote}\r\n          />\r\n          <Button\r\n            onClick={() => setShowArchive(!showArchive)}\r\n            variant={showArchive ? 'primary' : 'secondary'}\r\n            size=\"md\"\r\n            block\r\n            className=\"mt-4\"\r\n          >\r\n            {showArchive ? <i class=\"fas fa-sticky-note\"></i> : <i class=\"fas fa-inbox\"></i>} &nbsp;\r\n            {showArchive ? 'Notes' : 'Archive'}\r\n          </Button>\r\n          <LanguageButtons />\r\n        </Col>\r\n        <Col>\r\n          <Form isArchived={showArchive} refreshList={refreshList} selectedNote={selectedNote} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}